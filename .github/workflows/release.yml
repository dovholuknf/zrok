name: Release

on:
  push:

# grant write permission to GITHUB_TOKEN for goreleaser
permissions:
  contents: write

env:
  ZITI_DEB_PROD_REPO: ${{ vars.ZITI_DEB_PROD_REPO || 'zitipax-openziti-deb-stable' }}
  ZITI_RPM_PROD_REPO: ${{ vars.ZITI_RPM_PROD_REPO || 'zitipax-openziti-rpm-stable' }}
  JFROG_CLI_VERSION: ${{ vars.JFROG_CLI_VERSION || '2.50.4' }}

jobs:

  build-windows:
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt update
      - run: sudo apt-get install gcc-mingw-w64-x86-64

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.21.3'
          cache: true

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - run: npm install
        working-directory: ui

      - run: npm run build
        working-directory: ui
        env:
          CI: "true"

      - uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --skip=publish --config .goreleaser-windows.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: release-builds
          path: ./dist/*.gz

  sign-windows:
    needs: [build-linux-amd64, build-linux-arm, build-linux-arm64, build-windows]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - run: |
          mkdir -p ./automated-release-build

      - uses: actions/download-artifact@v3
        with:
          path: ./automated-release-build
    
  publish-release:
    # allow skipped but not failed
    if: ${{
          !cancelled()
          && (needs.build-windows.result     == 'success' || needs.build-windows.result     == 'skipped')
      }}
    needs: [sign-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: |
          mkdir -p ./automated-release-build

      - uses: actions/download-artifact@v3
        with:
          path: ./automated-release-build

      - run: |
          mv ./automated-release-build/release-builds/* ./automated-release-build/
          rm -rf ./automated-release-build/release-builds
          shasum ./automated-release-build/* > ./automated-release-build/checksums.txt

      - uses: goreleaser/goreleaser-action@v3
        with:
          args: release --config .goreleaser-release.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
